#!/bin/bash

set -x;
set -e;

header() {

cat > /etc/haproxy/haproxy.cfg << EOL

global
    log /dev/log    local0
    log /dev/log    local1 notice
    maxconn 1024
    #chroot /var/lib/haproxy
    #stats socket /run/haproxy/admin.sock mode 660 level admin
    #stats timeout 30s
    user haproxy
    group haproxy
    #daemon
    # Default SSL material locations
    #ca-base /etc/ssl/certs
    #crt-base /etc/ssl/private
    # Default ciphers to use on SSL-enabled listening sockets.
    # For more information, see ciphers(1SSL).
    #ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

listen stats
    bind *:9999
    mode http
    stats enable
    stats auth admin:admin
    stats uri /
    stats refresh 2s
EOL
}

frontend() {
cat >> /etc/haproxy/haproxy.cfg << EOL

frontend http-in
    bind *:80
    reqadd X-Forwarded-Proto:\ http
    option http-server-close
    default_backend base

frontend https-in
    bind *:443 ssl crt /etc/ssl/server.pem
    reqadd X-Forwarded-Proto:\ https
    option http-server-close
    default_backend base
EOL
}

backend() {

cat >> /etc/haproxy/haproxy.cfg << EOL

backend base
    option httpclose
    option forwardfor
EOL

serf members -status=alive -tag role=base | while read line; do
echo $line | awk '{ printf "    server %s %s check inter 500ms\n", $1, $2 }' >>/etc/haproxy/haproxy.cfg
done

    # ROLE=`echo $line | awk '{print \$3 }'`
    # if [ "x${ROLE}" != "xweb" ]; then
    #     continue
    # fi
}
    
main() {
#exec /usr/sbin/haproxy -db -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -sf $(cat /var/run/haproxy.pid)
sv restart haproxy
}

header
frontend
backend
main
